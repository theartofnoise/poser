{"version":3,"sources":["utils/API.js","components/Projects/index.js","pages/UserProjects.js","components/Modal/index.js","components/SignUpModalPage/index.js","components/MainPageBackground/index.js","pages/Welcome.js","components/Form/index.js","components/AudioBtn/index.js","components/Dropdown/index.js","components/Slider/index.js","components/MusicArea/index.js","pages/Main.js","App.js","index.js"],"names":["API","getUsers","axios","get","getUser","id","deleteUser","delete","deleteLyric","_deleteLyric","Object","asyncToGenerator","regenerator_default","a","mark","_callee","response","wrap","_context","prev","next","console","log","method","url","sent","abrupt","t0","stop","_x","apply","this","arguments","loginUser","data","post","saveUser","userData","saveLyric","getLyric","userEmail","updateLyric","put","concat","getLyricById","getMusicByMood","getMusicByStyle","getMusicByTempo","getMusic","getMoreMusic","style","mood","calc","x","y","window","innerHeight","innerWidth","trans","s","withRouter","props","_useSpring","useSpring","xys","config","mass","tension","friction","_useSpring2","slicedToArray","prop","set","react_default","createElement","mdbreact_esm","web","div","class","onMouseMove","_ref","clientX","clientY","onMouseLeave","transform","interpolate","className","title","tag","sub","author","Moment","date","format","lyrics","Link","to","onClick","UserProjects","state","music","projects","localStorage","getItem","refresh","handleInputChange","event","_event$target","target","name","value","_this","setState","defineProperty","handleFormSubmit","preventDefault","alert","then","res","loadLyrics","catch","err","logOut","removeItem","document","location","href","toggleCollapse","collapseID","prevState","_this2","_this3","overlay","backgroundColor","Fragment","color","fixed","dark","expand","scrolling","transparent","isOpen","navbar","right","fab","icon","size","center","outline","rounded","map","project","i","key","components_Projects","bind","_id","lyricTitle","Component","ModalPage","modal14","userPassword","toggle","nr","modalNumber","logIn","setItem","onLoggedIn","open","cascading","titleClass","md","label","onChange","type","placeholder","onClose","SignUpModalPage","MainPageBackground","loggedIn","logo","link1","link2","userId","login","email","password","openModal","left","poster","playsInline","autoPlay","muted","loop","src","sm","Modal","components_SignUpModalPage","React","Welcome","findUser","mainLink","pages_UserProjects","components_MainPageBackground","TextArea","assign","rows","AudioBtn","hover","responsive","gradient","songTitle","DropdownPage","caret","basic","items","item","SliderPage","htmlFor","defaultValue","min","max","step","MusicArea","dbMusic","filterMusic","songLoc","sound","getElementById","styleDropdown","e","filter","element","moodDropdown","playSong","song","func","nextProps","p","c","addEventListener","innerHTML","playbackRate","defaultPlaybackRate","fluid","controls","Dropdown","Slider","index","components_AudioBtn","Main","textArea","editing","lyricData","lyricsTitle","save","match","params","border","hint","components_MusicArea","App","BrowserRouter","Switch","Route","exact","path","logToggle","component","pages_Welcome","ReactDOM","render","src_App"],"mappings":"4TAEeA,EAAA,CAEbC,SAAU,WACR,OAAOC,IAAMC,IAAI,eAGnBC,QAAS,SAASC,GAChB,OAAOH,IAAMC,IAAI,cAAgBE,IAGnCC,WAAY,SAASD,GACnB,OAAOH,IAAMK,OAAO,cAAgBF,IAEtCG,YAAW,eAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAE,SAAAC,EAAeV,GAAf,IAAAW,EAAA,OAAAJ,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACXC,QAAQC,IAAI,iBADDJ,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAGclB,IAAM,CAC3BqB,OAAQ,SACRC,IAAK,sBAAwBnB,IALtB,cAGHW,EAHGE,EAAAO,KAAAP,EAAAQ,OAAA,SAOFV,GAPE,OAAAE,EAAAC,KAAA,EAAAD,EAAAS,GAAAT,EAAA,SASTG,QAAQC,IAARJ,EAAAS,IATS,yBAAAT,EAAAU,SAAAb,EAAA,iBAAF,gBAAAc,GAAA,OAAApB,EAAAqB,MAAAC,KAAAC,YAAA,GAaXC,UAAW,SAASC,GAClB,OAAOhC,IAAMiC,KAAK,mBAAoBD,IAGxCE,SAAU,SAASC,GACjB,OAAOnC,IAAMiC,KAAK,aAAcE,IAGlCC,UAAW,SAASD,GAClB,OAAOnC,IAAMiC,KAAK,cAAeE,IAEnCE,SAAU,SAASC,GACjB,OAAOtC,IAAMC,IAAI,eAAiBqC,IAGpCC,YAAa,SAASpC,EAAIgC,GACxB,OAAOnC,IAAMwC,IAAN,sBAAAC,OAAgCtC,GAAMgC,IAE/CO,aAAc,SAASvC,GACrB,OAAOH,IAAMC,IAAI,sBAAwBE,IAE3CwC,eAAgB,SAASxC,GACvB,OAAOH,IAAMC,IAAI,cAAgBE,IAEnCyC,gBAAiB,SAASzC,GACxB,OAAOH,IAAMC,IAAI,cAAgBE,IAEnC0C,gBAAiB,SAAS1C,GACxB,OAAOH,IAAMC,IAAI,cAAgBE,IAEnC2C,SAAU,WACR,OAAO9C,IAAMC,IAAI,gBAEnB8C,aAAc,SAASC,EAAOC,GAC5B,OAAOjD,IAAMC,IAAI,aAAe+C,EAAQC,uECtDtCC,EAAO,SAACC,EAAGC,GAAJ,MAAU,GAAGA,EAAIC,OAAOC,YAAc,GAAK,IAAKH,EAAIE,OAAOE,WAAa,GAAK,GAAI,MACxFC,EAAQ,SAACL,EAAGC,EAAGK,GAAP,oCAAAhB,OAA2CU,EAA3C,iBAAAV,OAA4DW,EAA5D,eAAAX,OAA2EgB,EAA3E,MAuCCC,kBApCf,SAAkBC,GAAO,IAAAC,EACHC,YAAU,iBAAO,CAAEC,IAAK,CAAC,EAAG,EAAG,GAAIC,OAAQ,CAAEC,KAAM,EAAGC,QAAS,IAAKC,SAAU,OAD3EC,EAAA3D,OAAA4D,EAAA,EAAA5D,CAAAoD,EAAA,GAChBS,EADgBF,EAAA,GACVG,EADUH,EAAA,GAGvB,OACEI,EAAA5D,EAAA6D,cAACC,EAAA,EAAD,KACAF,EAAA5D,EAAA6D,cAACE,EAAA,EAASC,IAAV,CAAcC,MAAM,QACpBC,YAAa,SAAAC,GAAA,IAAY3B,EAAZ2B,EAAGC,QAAqB3B,EAAxB0B,EAAeE,QAAf,OAAgCV,EAAI,CAAER,IAAKZ,EAAKC,EAAGC,MAChE6B,aAAc,kBAAMX,EAAI,CAAER,IAAK,CAAC,EAAG,EAAG,MACtCd,MAAO,CAAEkC,UAAWb,EAAKP,IAAIqB,YAAY3B,KAC3Ce,EAAA5D,EAAA6D,cAACC,EAAA,EAAD,CAASW,UAAU,WACjBb,EAAA5D,EAAA6D,cAACC,EAAA,EAAD,KACEF,EAAA5D,EAAA6D,cAACC,EAAA,EAAD,CACMW,UAAU,yDAA0DzB,EAAM0B,OAC1Ed,EAAA5D,EAAA6D,cAAA,WACND,EAAA5D,EAAA6D,cAACC,EAAA,EAAD,CAAca,IAAI,KAAKC,KAAG,EAACH,UAAU,mBAArC,OACOzB,EAAM6B,QAEbjB,EAAA5D,EAAA6D,cAACC,EAAA,EAAD,CAAaW,UAAU,YAC1BK,IAAO9B,EAAM+B,MAAMC,OAAO,cAAe,IAAIpB,EAAA5D,EAAA6D,cAAA,WACvCb,EAAMiC,QAETrB,EAAA5D,EAAA6D,cAACC,EAAA,EAAD,KACEF,EAAA5D,EAAA6D,cAACC,EAAA,EAAD,CAAQW,UAAU,eAChBb,EAAA5D,EAAA6D,cAACqB,EAAA,EAAD,CAAMC,GAAI,SAAWnC,EAAMxD,IAC3BoE,EAAA5D,EAAA6D,cAACC,EAAA,EAAD,CAAQW,UAAU,iBAAlB,SAEAb,EAAA5D,EAAA6D,cAACC,EAAA,EAAD,CAAQsB,QAASpC,EAAMoC,QAASX,UAAU,iBAA1C,0BC5BJY,6MACJC,MAAQ,CACNC,QACAC,SAAS,GACT7D,UAAW8D,aAAaC,QAAQ,aAChCC,SAAS,KAGXC,kBAAoB,SAAAC,GAAS,IAAAC,EACHD,EAAME,OAAtBC,EADmBF,EACnBE,KAAMC,EADaH,EACbG,MACdC,EAAKC,SAALtG,OAAAuG,EAAA,EAAAvG,CAAA,GACGmG,EAAOC,OAIZI,iBAAmB,SAAAR,GACjBA,EAAMS,iBACNC,MAAM,gBAgBR5G,YAAc,SAACH,GACbL,EAAIQ,YAAYH,GACbgH,KAAK,SAAAC,GAAQjG,QAAQC,IAAIgG,GACxBP,EAAKQ,eACNC,MAAM,SAAAC,GAAG,OAAIpG,QAAQC,IAAImG,QAI9BC,OAAS,WACPpB,aAAaqB,WAAW,aACxBrB,aAAaqB,WAAW,gBACxBC,SAASC,SAASC,KAAK,OAGzBC,eAAiB,SAAAC,GAAU,OAAI,kBAC7BjB,EAAKC,SAAS,SAAAiB,GAAS,MAAK,CAC5BD,WAAYC,EAAUD,aAAeA,EAAaA,EAAa,oFA5BpD,IAAAE,EAAAnG,KACX/B,EAAIuC,SAASR,KAAKoE,MAAM3D,WACrB6E,KAAK,SAAAC,GACJY,EAAKlB,SAAS,CAACX,SAASiB,EAAIpF,SAE7BsF,MAAM,SAAAC,GAAG,OAAIpG,QAAQC,IAAImG,iDAI5B1F,KAAKwF,4CAuBE1D,GAAO,IAAAsE,EAAApG,KACNqG,EACJ3D,EAAA5D,EAAA6D,cAAA,OAAKrE,GAAG,kBAAkB6C,MAAO,CAAEmF,gBAAiB,eAAiBpC,QAASlE,KAAKgG,eAAe,oBAEpG,OACEtD,EAAA5D,EAAA6D,cAAAD,EAAA5D,EAAAyH,SAAA,KAEJ7D,EAAA5D,EAAA6D,cAAA,WACAD,EAAA5D,EAAA6D,cAACC,EAAA,EAAD,CAAW4D,MAAM,eAAeC,MAAM,MAAMC,MAAI,EAACC,OAAO,KAAKC,WAAS,EAACC,aAAW,GAC9EnE,EAAA5D,EAAA6D,cAACC,EAAA,EAAD,KACEF,EAAA5D,EAAA6D,cAACC,EAAA,EAAD,KACEF,EAAA5D,EAAA6D,cAAA,QAAMY,UAAU,cAAhB,SAEFb,EAAA5D,EAAA6D,cAACC,EAAA,EAAD,CAAkBsB,QAASlE,KAAKgG,eAAe,oBAC/CtD,EAAA5D,EAAA6D,cAACC,EAAA,EAAD,CAAatE,GAAG,iBAAiBwI,OAAQ9G,KAAKoE,MAAM6B,WAAYc,QAAM,GACpErE,EAAA5D,EAAA6D,cAACC,EAAA,EAAD,CAAcoE,OAAK,GACjBtE,EAAA5D,EAAA6D,cAACC,EAAA,EAAD,KACEF,EAAA5D,EAAA6D,cAACC,EAAA,EAAD,CAAYqB,GAAG,MACbvB,EAAA5D,EAAA6D,cAACC,EAAA,EAAD,CAASqE,KAAG,EAACC,KAAK,iBAGtBxE,EAAA5D,EAAA6D,cAACC,EAAA,EAAD,KACEF,EAAA5D,EAAA6D,cAACC,EAAA,EAAD,CAAYqB,GAAG,MACbvB,EAAA5D,EAAA6D,cAACC,EAAA,EAAD,CAASqE,KAAG,EAACC,KAAK,cAGtBxE,EAAA5D,EAAA6D,cAACC,EAAA,EAAD,KACEF,EAAA5D,EAAA6D,cAACC,EAAA,EAAD,CAAYqB,GAAG,MACbvB,EAAA5D,EAAA6D,cAACC,EAAA,EAAD,CAASqE,KAAG,EAACC,KAAK,oBAO7BlH,KAAKoE,MAAM6B,YAAcI,GAGxB3D,EAAA5D,EAAA6D,cAACC,EAAA,EAAD,CAActE,GAAG,WACjBoE,EAAA5D,EAAA6D,cAACC,EAAA,EAAD,KACEF,EAAA5D,EAAA6D,cAACC,EAAA,EAAD,CAAQuE,KAAK,SACXzE,EAAA5D,EAAA6D,cAACC,EAAA,EAAD,CAAQwE,QAAM,GACZ1E,EAAA5D,EAAA6D,cAACqB,EAAA,EAAD,CAAMC,GAAG,SACTvB,EAAA5D,EAAA6D,cAACC,EAAA,EAAD,CAAQyE,SAAO,EAACC,SAAO,EAACd,MAAM,aAA9B,gBAIA9D,EAAA5D,EAAA6D,cAACC,EAAA,EAAD,CAAQyE,SAAO,EAACC,SAAO,EAACd,MAAM,YAAYtC,QAASlE,KAAK2F,QAAxD,cAMJjD,EAAA5D,EAAA6D,cAACC,EAAA,EAAD,KAEG5C,KAAKoE,MAAME,SAASiD,IAAI,SAACC,EAASC,GACnC,OACA/E,EAAA5D,EAAA6D,cAACC,EAAA,EAAD,CAAS8E,IAAKD,EAAGN,KAAK,QAClBzE,EAAA5D,EAAA6D,cAACgF,EAAD,CACE9D,KAAM2D,EAAQ3D,KACdE,OAAQyD,EAAQzD,OAChBG,QAASkC,EAAK3H,YAAYmJ,KAAKxB,EAAMoB,EAAQK,KAC7ClE,OAAQ6D,EAAQ7D,OAChBH,MAAOgE,EAAQM,WACfxJ,GAAIkJ,EAAQK,mBArHHE,aA+HZlG,cAAWsC,GCxCX6D,qNA5Ff5D,MAAQ,CACN6D,SAAS,EACTxH,UAAW8D,aAAaC,QAAQ,aAChC0D,aAAc,MAGhBC,OAAS,SAAAC,GAAE,OAAI,WACb,IAAIC,EAAc,QAAUD,EAC5BpD,EAAKC,SAALtG,OAAAuG,EAAA,EAAAvG,CAAA,GACG0J,GAAerD,EAAKZ,MAAMiE,SAI/B3D,kBAAoB,SAAAC,GAAS,IAAAC,EACHD,EAAME,OAAtBC,EADmBF,EACnBE,KAAMC,EADaH,EACbG,MACdC,EAAKC,SAALtG,OAAAuG,EAAA,EAAAvG,CAAA,GACGmG,EAAOC,OAIZuD,MAAQ,SAAC3D,GAEPA,EAAMS,iBACLnH,EAAIiC,UAAU,CACXO,UAAWuE,EAAKZ,MAAM3D,YACrB6E,KAAK,SAAAC,GACHA,EAAIpF,MAMLoE,aAAagE,QAAQ,YAAavD,EAAKZ,MAAM3D,WAC7C8D,aAAagE,QAAQ,eAAgBvD,EAAKZ,MAAM8D,cAChDlD,EAAKlD,MAAM0G,cAGXnD,MAAM,yGAOZ,OACI3C,EAAA5D,EAAA6D,cAACC,EAAA,EAAD,KAIEF,EAAA5D,EAAA6D,cAACC,EAAA,EAAD,CAAUkE,OAAQ9G,KAAK8B,MAAM2G,KAAMN,OAAQnI,KAAKmI,OAAO,IAAKhB,KAAK,KAC/DuB,WAAS,GACThG,EAAA5D,EAAA6D,cAACC,EAAA,EAAD,CAAgBuF,OAAQnI,KAAKmI,OAAO,IAAKQ,WAAW,iBAClDpF,UAAU,8CAA6Cb,EAAA5D,EAAA6D,cAACC,EAAA,EAAD,CAASsE,KAAK,eADvE,YAEAxE,EAAA5D,EAAA6D,cAACC,EAAA,EAAD,KACAF,EAAA5D,EAAA6D,cAACC,EAAA,EAAD,KAEFF,EAAA5D,EAAA6D,cAACC,EAAA,EAAD,CAAQgG,GAAG,MACTlG,EAAA5D,EAAA6D,cAAA,YAEED,EAAA5D,EAAA6D,cAAA,OAAKY,UAAU,aACbb,EAAA5D,EAAA6D,cAACC,EAAA,EAAD,CACEkC,KAAK,YACL+D,MAAM,QACN9D,MAAO/E,KAAKoE,MAAM3D,UAClBqI,SAAU9I,KAAK0E,kBACfqE,KAAK,QACLC,YAAY,UAEdtG,EAAA5D,EAAA6D,cAACC,EAAA,EAAD,CACEkC,KAAK,eACL+D,MAAM,WACN9D,MAAO/E,KAAKoE,MAAM8D,aAClBY,SAAU9I,KAAK0E,kBACfqE,KAAK,WACLC,YAAY,kBAQlBtG,EAAA5D,EAAA6D,cAACC,EAAA,EAAD,KACEF,EAAA5D,EAAA6D,cAACC,EAAA,EAAD,CAAQ4D,MAAM,YAAYtC,QAASlE,KAAK8B,MAAMmH,SAA9C,SACAvG,EAAA5D,EAAA6D,cAACC,EAAA,EAAD,CAAQ4D,MAAM,UAAUtC,QAASlE,KAAKsI,OAAtC,oBArFYP,cCmETmB,6MAnEf9E,MAAQ,CACN6D,SAAS,EACTxH,UAAW,GACXyH,aAAc,MAGhBC,OAAS,SAAAC,GAAE,OAAI,WACb,IAAIC,EAAc,QAAUD,EAC5BpD,EAAKC,SAALtG,OAAAuG,EAAA,EAAAvG,CAAA,GACG0J,GAAerD,EAAKZ,MAAMiE,SAI/B3D,kBAAoB,SAAAC,GAAS,IAAAC,EACHD,EAAME,OAAtBC,EADmBF,EACnBE,KAAMC,EADaH,EACbG,MACdC,EAAKC,SAALtG,OAAAuG,EAAA,EAAAvG,CAAA,GACGmG,EAAOC,6EAKH,IAAAoB,EAAAnG,KACP,OACE0C,EAAA5D,EAAA6D,cAACC,EAAA,EAAD,KAIAF,EAAA5D,EAAA6D,cAACC,EAAA,EAAD,CAAUkE,OAAQ9G,KAAK8B,MAAMgF,OAAQqB,OAAQnI,KAAKmI,OAAO,IAAKhB,KAAK,KACjEuB,WAAS,GACThG,EAAA5D,EAAA6D,cAACC,EAAA,EAAD,CAAgBuF,OAAQnI,KAAKmI,OAAO,IAAKQ,WAAW,iBAClDpF,UAAU,8CAA6Cb,EAAA5D,EAAA6D,cAACC,EAAA,EAAD,CAASsE,KAAK,eADvE,cAEAxE,EAAA5D,EAAA6D,cAACC,EAAA,EAAD,KACAF,EAAA5D,EAAA6D,cAACC,EAAA,EAAD,KACEF,EAAA5D,EAAA6D,cAACC,EAAA,EAAD,CAAQgG,GAAG,MACTlG,EAAA5D,EAAA6D,cAAA,YACED,EAAA5D,EAAA6D,cAAA,OAAKY,UAAU,aACbb,EAAA5D,EAAA6D,cAACC,EAAA,EAAD,CACEkC,KAAK,YACL+D,MAAM,QACN9D,MAAO/E,KAAKoE,MAAM3D,UAClBqI,SAAU9I,KAAK0E,kBACfqE,KAAK,QACLC,YAAY,UAEdtG,EAAA5D,EAAA6D,cAACC,EAAA,EAAD,CACEkC,KAAK,eACL+D,MAAM,WACN9D,MAAO/E,KAAKoE,MAAM8D,aAClBY,SAAU9I,KAAK0E,kBACfqE,KAAK,WACLC,YAAY,kBAOlBtG,EAAA5D,EAAA6D,cAACC,EAAA,EAAD,KACEF,EAAA5D,EAAA6D,cAACC,EAAA,EAAD,CAAQ4D,MAAM,YAAYtC,QAASlE,KAAKmI,OAAO,KAA/C,SACAzF,EAAA5D,EAAA6D,cAACC,EAAA,EAAD,CAAQ4D,MAAM,UAAUuC,KAAK,SAAS7E,QAAS,SAACS,GAAD,OAAWwB,EAAKrE,MAAMzB,SAAS8F,EAAK/B,MAAM3D,UAAW0F,EAAK/B,MAAM8D,aAAcvD,KAA7H,0BA5DkBoD,aC2MfoB,6MApMf/E,MAAQ,CACR6B,WAAY,GACZmD,SAAgD,OAAtC7E,aAAaC,QAAQ,aAC/B/D,UAAW8D,aAAaC,QAAQ,cAAc,GAC9C0D,aAAc,GACdmB,KAAM,OACNC,MAAO,GACPC,MAAO,GACPC,OAAQ,GACRlF,SAAS,GACTmF,OAAO,KAGP/E,kBAAoB,SAAAC,GAAS,IAAAC,EACHD,EAAME,OAAtBC,EADmBF,EACnBE,KAAMC,EADaH,EACbG,MACdC,EAAKC,SAALtG,OAAAuG,EAAA,EAAAvG,CAAA,GACGmG,EAAOC,OAIZiB,eAAiB,SAAAC,GAAU,OAAI,kBAC/BjB,EAAKC,SAAS,SAAAiB,GAAS,MAAK,CAC5BD,WAAYC,EAAUD,aAAeA,EAAaA,EAAa,UAG/DqC,MAAQ,SAAC3D,GAEPA,EAAMS,iBACLnH,EAAIiC,UAAU,CACXO,UAAWuE,EAAKZ,MAAM3D,YACrB6E,KAAK,SAAAC,GACHA,EAAIpF,MACLoE,aAAagE,QAAQ,YAAavD,EAAKZ,MAAM3D,WAC7C8D,aAAagE,QAAQ,eAAgBvD,EAAKZ,MAAM8D,cAChDlD,EAAKlD,MAAM0G,cAEXnD,MAAM,mCAKdhF,SAAW,SAACqJ,EAAOC,EAAUhF,GAC3BA,EAAMS,iBACNnH,EAAIoC,SAAS,CACXI,UAAWiJ,EACXxB,aAAcyB,IAEbrE,KAAK,SAAAC,GACHP,EAAKC,SAAS,CAAC2E,WAAW,MAE5BnE,MAAM,SAAAC,GAAG,OAAIpG,QAAQC,IAAImG,8EAGrB,IAAAS,EAAAnG,KACHqG,EACN3D,EAAA5D,EAAA6D,cAAA,OAAKrE,GAAG,kBAAkB6C,MAAO,CAAEmF,gBAAiB,eAAiBpC,QAASlE,KAAKgG,eAAe,oBAElG,OACAtD,EAAA5D,EAAA6D,cAAA,WAKID,EAAA5D,EAAA6D,cAACC,EAAA,EAAD,CAAW4D,MAAM,eAAeC,MAAM,MAAMC,MAAI,EAACC,OAAO,KAAKC,WAAS,EAACC,aAAW,GAC9EnE,EAAA5D,EAAA6D,cAACC,EAAA,EAAD,KACEF,EAAA5D,EAAA6D,cAACC,EAAA,EAAD,KACEF,EAAA5D,EAAA6D,cAAA,QAAMY,UAAU,cAAhB,SAEFb,EAAA5D,EAAA6D,cAACC,EAAA,EAAD,CAAkBsB,QAASlE,KAAKgG,eAAe,oBAC/CtD,EAAA5D,EAAA6D,cAACC,EAAA,EAAD,CAAatE,GAAG,iBAAiBwI,OAAQ9G,KAAKoE,MAAM6B,WAAYc,QAAM,GACpErE,EAAA5D,EAAA6D,cAACC,EAAA,EAAD,CAAciH,MAAI,IAQlBnH,EAAA5D,EAAA6D,cAACC,EAAA,EAAD,CAAcoE,OAAK,GACjBtE,EAAA5D,EAAA6D,cAACC,EAAA,EAAD,KACEF,EAAA5D,EAAA6D,cAACC,EAAA,EAAD,CAAYqB,GAAG,MACbvB,EAAA5D,EAAA6D,cAACC,EAAA,EAAD,CAASqE,KAAG,EAACC,KAAK,iBAGtBxE,EAAA5D,EAAA6D,cAACC,EAAA,EAAD,KACEF,EAAA5D,EAAA6D,cAACC,EAAA,EAAD,CAAYqB,GAAG,MACbvB,EAAA5D,EAAA6D,cAACC,EAAA,EAAD,CAASqE,KAAG,EAACC,KAAK,cAGtBxE,EAAA5D,EAAA6D,cAACC,EAAA,EAAD,KACEF,EAAA5D,EAAA6D,cAACC,EAAA,EAAD,CAAYqB,GAAG,MACbvB,EAAA5D,EAAA6D,cAACC,EAAA,EAAD,CAASqE,KAAG,EAACC,KAAK,oBAO7BlH,KAAKoE,MAAM6B,YAAcI,EAG9B3D,EAAA5D,EAAA6D,cAAA,OAAKrE,GAAG,mBACRoE,EAAA5D,EAAA6D,cAACC,EAAA,EAAD,KACEF,EAAA5D,EAAA6D,cAAA,SAAOY,UAAU,cAAcuG,OAAO,2DAA2DC,aAAW,EAC1GC,UAAQ,EAACC,MAAM,GAAGC,MAAI,GACtBxH,EAAA5D,EAAA6D,cAAA,UAAQwH,IAAI,sFAAsFpB,KAAK,eAEzGrG,EAAA5D,EAAA6D,cAACC,EAAA,EAAD,CAASW,UAAU,6DACjBb,EAAA5D,EAAA6D,cAACC,EAAA,EAAD,CAAcW,UAAU,mBACtBb,EAAA5D,EAAA6D,cAACC,EAAA,EAAD,KACEF,EAAA5D,EAAA6D,cAACC,EAAA,EAAD,CAAQgG,GAAG,KAAKrF,UAAU,+BACxBb,EAAA5D,EAAA6D,cAAA,MAAIY,UAAU,2CAAd,wBACwB,KAExBb,EAAA5D,EAAA6D,cAAA,MAAIY,UAAU,uBACdb,EAAA5D,EAAA6D,cAAA,MAAIY,UAAU,4BAAd,uBAsBAb,EAAA5D,EAAA6D,cAACC,EAAA,EAAD,KACAF,EAAA5D,EAAA6D,cAACC,EAAA,EAAD,CAAQwH,GAAG,KAAKxB,GAAG,IAAIrF,UAAU,cAC/Bb,EAAA5D,EAAA6D,cAACC,EAAA,EAAD,CAAQyE,SAAO,EAACC,SAAO,EAACd,MAAM,YAAYtC,QAAS,kBAAIiC,EAAKlB,SAAS,CAACwE,OAAM,MAAQ/G,EAAA5D,EAAA6D,cAACC,EAAA,EAAD,CAASsE,KAAK,gBAAlG,WACAxE,EAAA5D,EAAA6D,cAAC0H,EAAD,CAAYpB,QAAS,kBAAI9C,EAAKlB,SAAS,CAACwE,OAAM,KAAShB,KAAMzI,KAAKoE,MAAMqF,MAAOjB,WAAYxI,KAAK8B,MAAM0G,cAEtG9F,EAAA5D,EAAA6D,cAACC,EAAA,EAAD,CAAQwH,GAAG,KAAKxB,GAAG,IAAIrF,UAAU,aACjCb,EAAA5D,EAAA6D,cAAC2H,EAAD,CAAiBxD,OAAQ9G,KAAKoE,MAAMwF,UAAWvJ,SAAUL,KAAKK,WAC9DqC,EAAA5D,EAAA6D,cAACC,EAAA,EAAD,CAAQyE,SAAO,EAACC,SAAO,EAACd,MAAM,YAAYtC,QAAS,kBAAIiC,EAAKlB,SAAS,CAAC2E,WAAW,MAAQlH,EAAA5D,EAAA6D,cAACC,EAAA,EAAD,CAASsE,KAAK,cAAvG,6BAjJmBqD,IAAMxC,WCHjCyC,6MACJpG,MAAQ,CAENgF,SAAgD,OAAtC7E,aAAaC,QAAQ,aAC/B/D,UAAW8D,aAAaC,QAAQ,aAChC0D,aAAc,GACdmB,KAAM,OACNC,MAAO,GACPC,MAAO,GACPC,OAAQ,GACRlF,SAAS,MAkBXI,kBAAoB,SAAAC,GAAS,IAAAC,EACHD,EAAME,OAAtBC,EADmBF,EACnBE,KAAMC,EADaH,EACbG,MACdC,EAAKC,SAALtG,OAAAuG,EAAA,EAAAvG,CAAA,GACGmG,EAAOC,OAIZuD,MAAQ,SAAC3D,GAEPA,EAAMS,iBACLnH,EAAIiC,UAAU,CACXO,UAAWuE,EAAKZ,MAAM3D,YACrB6E,KAAK,SAAAC,GACHA,EAAIpF,MAMLoE,aAAagE,QAAQ,YAAavD,EAAKZ,MAAM3D,WAC7C8D,aAAagE,QAAQ,eAAgBvD,EAAKZ,MAAM8D,cAChDlD,EAAKlD,MAAM0G,aACXxD,EAAKQ,cAELH,MAAM,mCAMdhF,SAAW,SAACsE,GACVA,EAAMS,iBACNnH,EAAIoC,SAAS,CACXI,UAAWuE,EAAKZ,MAAM3D,UACtByH,aAAclD,EAAKZ,MAAM8D,eAExB5C,KAAK,SAAAC,GACJP,EAAKC,SAAS,CACdxE,UAAW,GACXyH,aAAc,KACdlD,EAAKyF,SAASlF,KAEfE,MAAM,SAAAC,GAAG,OAAIpG,QAAQC,IAAImG,QAG9BC,OAAS,WACPpB,aAAaqB,WAAW,aACxBrB,aAAaqB,WAAW,gBACxBZ,EAAKC,SAAS,CACZmE,UAAU,EACVsB,SAAU,KAEZ1F,EAAKlD,MAAM6D,sFAlEA,IAAAQ,EAAAnG,KACX/B,EAAIuC,SAASR,KAAKoE,MAAM3D,WACrB6E,KAAK,SAAAC,GACJY,EAAKlB,SAAS,CAACX,SAASiB,EAAIpF,SAE7BsF,MAAM,SAAAC,GAAG,OAAIpG,QAAQC,IAAImG,iDAK5B1F,KAAKwF,8CA4DL,OACE9C,EAAA5D,EAAA6D,cAAA,WACG3C,KAAKoE,MAAMgF,SACV1G,EAAA5D,EAAA6D,cAAA,WACAD,EAAA5D,EAAA6D,cAACgI,EAAD,CAAcrG,SAAUtE,KAAKoE,MAAME,SAAUqB,OAAQ3F,KAAK2F,UAG1DjD,EAAA5D,EAAA6D,cAAA,WACAD,EAAA5D,EAAA6D,cAACiI,EAAD,CAAoBpC,WAAYxI,KAAK8B,MAAM0G,sBA5F/BT,aAoGPlG,cAAW2I,GC9FnB,SAASK,EAAS/I,GACvB,OACEY,EAAA5D,EAAA6D,cAAA,OAAKY,UAAU,cACbb,EAAA5D,EAAA6D,cAAA,WAAAhE,OAAAmM,OAAA,CAAUvH,UAAU,eAAewH,KAAK,MAASjJ,KCCxCkJ,MAbf,SAAkBlJ,GAChB,OACEY,EAAA5D,EAAA6D,cAACC,EAAA,EAAD,CAAUqI,OAAK,EAACC,YAAU,GACxBxI,EAAA5D,EAAA6D,cAACC,EAAA,EAAD,KACEF,EAAA5D,EAAA6D,cAAA,UACED,EAAA5D,EAAA6D,cAAA,UAAID,EAAA5D,EAAA6D,cAACC,EAAA,EAAD,CAAQa,IAAI,IAAI0D,KAAK,KAAKgE,SAAS,SAASjH,QAASpC,EAAMoC,SAASxB,EAAA5D,EAAA6D,cAACC,EAAA,EAAD,CAASsE,KAAK,WACtFxE,EAAA5D,EAAA6D,cAAA,UAAKb,EAAMsJ,eCONC,EAbM,SAACvJ,GACpB,OACEY,EAAA5D,EAAA6D,cAACC,EAAA,EAAD,CAAckG,SAAUhH,EAAMgH,UAC5BpG,EAAA5D,EAAA6D,cAACC,EAAA,EAAD,CAAmB0I,OAAK,EAAC9E,MAAM,WAC5B1E,EAAM0B,OAETd,EAAA5D,EAAA6D,cAACC,EAAA,EAAD,CAAiB2I,OAAK,GACnBzJ,EAAM0J,MAAMjE,IAAI,SAACkE,EAAM/D,GAAP,OAAehF,EAAA5D,EAAA6D,cAACC,EAAA,EAAD,CAAiB8E,IAAKA,EAAKxD,QAAS,kBAAMpC,EAAMgH,SAAS2C,KAAQA,QCE1FC,EAVI,SAAC5J,GAChB,OACEY,EAAA5D,EAAA6D,cAAA,OAAKY,UAAU,QACbb,EAAA5D,EAAA6D,cAAA,SAAOgJ,QAAQ,gBAAf,eAEAjJ,EAAA5D,EAAA6D,cAAA,SAAOrE,GAAIwD,EAAMxD,GAAIyK,KAAK,QAAQxF,UAAU,eAAeqI,aAAa,IAAIC,IAAI,MAAMC,IAAI,MAAMC,KAAK,UC4H9FC,6MAzHb5H,MAAQ,CAEN6H,QAAS,GACTC,YAAa,GACb/K,MAAO,GACPC,KAAM,GACN+K,QAAQ,IAAInH,EAAKlD,MAAMuC,MACvB+H,MAAMvG,SAASwG,eAAe,cA4BjCC,cAAgB,SAACC,GAEf,GADAvH,EAAKC,SAAS,CAAE9D,MAAOoL,IACb,QAANA,EACFvH,EAAKC,SAAS,CAACiH,YAAYlH,EAAKZ,MAAM6H,cACjC,CACP,IACIO,EADQxH,EAAKZ,MAAM6H,QACJO,OAAO,SAAUC,GAClC,OAAQA,EAAQtL,QAAUoL,IAE5BvH,EAAKC,SAAS,CAAEiH,YAAaM,QAI/BE,aAAe,SAACH,GAEd,GADDvH,EAAKC,SAAS,CAAE7D,KAAMmL,IACX,QAANA,EACFvH,EAAKC,SAAS,CAACiH,YAAYlH,EAAKZ,MAAM6H,cACjC,CACP,IACIO,EADQxH,EAAKZ,MAAM6H,QACJO,OAAO,SAAUC,GAClC,OAAQA,EAAQrL,OAASmL,IAE3BvH,EAAKC,SAAS,CAAEiH,YAAaM,QAI9BG,SAAW,SAAAC,GACT5H,EAAKlD,MAAM+K,KAAKD,EAAK9G,UACrBd,EAAKC,SAAS,CAAEkH,QAAS,IAAIS,EAAK9G,qGArDVgH,GACxB9M,KAAKiF,SAAS,CAACkH,QAAQ,IAAIW,EAAUzI,oDAInB,IAAA8B,EAAAnG,KAEhBlB,EAAI+G,SAASwG,eAAe,WAC5BU,EAAIlH,SAASwG,eAAe,OAC5BW,EAAInH,SAASwG,eAAe,cAEhCU,EAAEE,iBAAiB,QAAQ,WACzBD,EAAEE,UAAYH,EAAEhI,MAChBjG,EAAEqO,aAAeJ,EAAEhI,MACnBjG,EAAEsO,oBAAuB,EACzBL,EAAEnB,aAAe,IACjB,GAEA3N,EAAIgD,WACHqE,KAAK,SAAAC,GACFY,EAAKlB,SAAS,CAAEgH,QAAS1G,EAAIpF,KAAM+L,YAAa3G,EAAIpF,SAErDsF,MAAM,SAAAC,GAAG,OAAIpG,QAAQC,IAAImG,sCAkCrB,IAAAU,EAAApG,KAIP,OACE0C,EAAA5D,EAAA6D,cAACC,EAAA,EAAD,CAAcyK,OAAK,GACjB3K,EAAA5D,EAAA6D,cAACC,EAAA,EAAD,KACEF,EAAA5D,EAAA6D,cAACC,EAAA,EAAD,CAAQuE,KAAK,SACTzE,EAAA5D,EAAA6D,cAACC,EAAA,EAAD,KACEF,EAAA5D,EAAA6D,cAACC,EAAA,EAAD,CAAQW,UAAU,gBAChBb,EAAA5D,EAAA6D,cAAA,SAAOrE,GAAG,UAAU6L,IAAKnK,KAAKoE,MAAM+H,QAASmB,UAAQ,EAACtD,UAAQ,EAACE,MAAI,GACjExH,EAAA5D,EAAA6D,cAAA,UAAQoG,KAAK,cADf,qDAKFrG,EAAA5D,EAAA6D,cAACC,EAAA,EAAD,CAAQW,UAAU,aAChBb,EAAA5D,EAAA6D,cAAC4K,EAAD,CACEzE,SAAU,SAAAyD,GAAC,OAAInG,EAAKkG,cAAcC,IAClC/I,MAAOxD,KAAKoE,MAAMjD,OAAS,QAC3BqK,MAAO,CAAC,MAAM,OAAQ,MAAO,WAAY,QAAS,gBAEpD9I,EAAA5D,EAAA6D,cAAC4K,EAAD,CACEzE,SAAU,SAAAyD,GAAC,OAAInG,EAAKsG,aAAaH,IACjC/I,MAAOxD,KAAKoE,MAAMhD,MAAQ,OAC1BoK,MAAO,CAAC,MAAM,QAAS,MAAO,QAAS,kBAG3C9I,EAAA5D,EAAA6D,cAAA,YACED,EAAA5D,EAAA6D,cAAC6K,EAAD,CAAYlP,GAAG,MAAMiF,UAAU,iBAC/Bb,EAAA5D,EAAA6D,cAAA,0BAAiBD,EAAA5D,EAAA6D,cAAA,QAAMrE,GAAG,cAAT,QAGrBoE,EAAA5D,EAAA6D,cAACC,EAAA,EAAD,KACG5C,KAAKoE,MAAM8H,YAIT3E,IAAI,SAAClD,EAAOoJ,GAAR,OACH/K,EAAA5D,EAAA6D,cAAC+K,EAAD,CACE5I,KAAMT,EAAMb,MACZkE,IAAK+F,EACLvJ,QAASkC,EAAKuG,SAAS/E,KAAKxB,EAAM/B,GAClC8F,IAAK9F,EAAMyB,SACXsF,UAAW/G,EAAMb,MACjBlF,GAAI+F,EAAM/F,kBA/GRyJ,aCqKT4F,6MApKbvJ,MAAQ,CACN3D,UAAW8D,aAAaC,QAAQ,aAChC6E,KAAK,OACLC,MAAM,GACNC,MAAM,OACNxF,OAAQ,GACR+D,WAAY,GACZzD,MAAO,GACPV,OAAQ,GACRiK,SAAS,iBACTC,SAAQ,EACRC,UAAW,CAAC/J,OAAO,GACPgK,YAAY,GACZpK,OAAO,OAkBrBe,kBAAoB,SAAAC,GAAS,IAAAC,EACHD,EAAME,OAAtBC,EADmBF,EACnBE,KAAMC,EADaH,EACbG,MACdC,EAAKC,SAALtG,OAAAuG,EAAA,EAAAvG,CAAA,GACGmG,EAAOC,OAIZV,MAAQ,SAAA5E,GACNuF,EAAKC,SAAS,CAACZ,MAAQ5E,OAGzBuO,KAAO,WACDhJ,EAAKZ,MAAMyJ,QACf5P,EAAIyC,YAAYsE,EAAKlD,MAAMmM,MAAMC,OAAO5P,GAAI,CAC1CmC,UAAWuE,EAAKZ,MAAM3D,UACtBkD,OAAQqB,EAAKZ,MAAMT,OACnBmE,WAAY9C,EAAKZ,MAAM0D,WACvB/D,OAAQiB,EAAKZ,MAAML,OACnBM,MAAOW,EAAKZ,MAAMC,QAEjBiB,KAAK,SAAAC,GACJF,MAAK,SAAAzE,OAAUoE,EAAKZ,MAAM0D,WAArB,QAENrC,MAAM,SAAAC,GAAG,OAAIpG,QAAQC,IAAImG,KAE1BzH,EAAIsC,UAAU,CACdE,UAAWuE,EAAKZ,MAAM3D,UACtBkD,OAAQqB,EAAKZ,MAAMT,OACnBmE,WAAY9C,EAAKZ,MAAM0D,WACvB/D,OAAQiB,EAAKZ,MAAML,OACnBM,MAAOW,EAAKZ,MAAMC,QAEjBiB,KAAK,SAAAC,GACJF,MAAK,SAAAzE,OAAUoE,EAAKZ,MAAM0D,WAArB,QAENrC,MAAM,SAAAC,GAAG,OAAIpG,QAAQC,IAAImG,QAG9BM,eAAiB,SAAAC,GAAU,OAAI,kBAC3BjB,EAAKC,SAAS,SAAAiB,GAAS,MAAK,CAC5BD,WAAYC,EAAUD,aAAeA,EAAaA,EAAa,2FAvD/C,IAAAE,EAAAnG,KACdA,KAAK8B,MAAMmM,MAAMC,OAAO5P,IAC5BL,EAAI4C,aAAab,KAAK8B,MAAMmM,MAAMC,OAAO5P,IACtCgH,KAAM,SAACC,GACNY,EAAKlB,SAAS,CAAElB,OAAQwB,EAAIpF,KAAK4D,OACjBJ,OAAQ4B,EAAIpF,KAAKwD,OACjBmE,WAAYvC,EAAIpF,KAAK2H,aACrC3B,EAAKlB,SAAS,CAAE6I,UAAWvI,EAAIpF,KAC/B0N,SAAQ,EAAMxJ,MAAOkB,EAAIpF,KAAKkE,UAE/BoB,MAAM,SAAAC,GAAG,OAAIpG,QAAQC,IAAImG,sCAmD5B,IAAMW,EACJ3D,EAAA5D,EAAA6D,cAAA,OAAKrE,GAAG,kBAAkB6C,MAAO,CAAEmF,gBAAiB,eAAiBpC,QAASlE,KAAKgG,eAAe,oBAEpG,OACEtD,EAAA5D,EAAA6D,cAAAD,EAAA5D,EAAAyH,SAAA,KACA7D,EAAA5D,EAAA6D,cAAA,OAAKrE,GAAG,mBACNoE,EAAA5D,EAAA6D,cAAA,WACED,EAAA5D,EAAA6D,cAACC,EAAA,EAAD,CAAW4D,MAAM,eAAeC,MAAM,MAAMC,MAAI,EAACC,OAAO,KAAKC,WAAS,EAACC,aAAW,EAACtD,UAAU,QAC3Fb,EAAA5D,EAAA6D,cAACC,EAAA,EAAD,KACEF,EAAA5D,EAAA6D,cAACC,EAAA,EAAD,KACEF,EAAA5D,EAAA6D,cAAA,QAAMY,UAAU,cAAhB,SAEFb,EAAA5D,EAAA6D,cAACC,EAAA,EAAD,CAAkBsB,QAASlE,KAAKgG,eAAyB,oBACzDtD,EAAA5D,EAAA6D,cAACC,EAAA,EAAD,CAAatE,GAAG,iBAAiBwI,OAA0B9G,KAAKoE,MAAM6B,WAAYc,QAAM,GACtFrE,EAAA5D,EAAA6D,cAACC,EAAA,EAAD,CAAciH,MAAI,GAClBnH,EAAA5D,EAAA6D,cAACC,EAAA,EAAD,KACEF,EAAA5D,EAAA6D,cAACC,EAAA,EAAD,CAAYqB,GAAG,SAAf,cAGFvB,EAAA5D,EAAA6D,cAACC,EAAA,EAAD,CAAcoE,OAAK,GACjBtE,EAAA5D,EAAA6D,cAACC,EAAA,EAAD,KACEF,EAAA5D,EAAA6D,cAACC,EAAA,EAAD,CAAYqB,GAAG,MACbvB,EAAA5D,EAAA6D,cAACC,EAAA,EAAD,CAASqE,KAAG,EAACC,KAAK,iBAGtBxE,EAAA5D,EAAA6D,cAACC,EAAA,EAAD,KACEF,EAAA5D,EAAA6D,cAACC,EAAA,EAAD,CAAYqB,GAAG,MACbvB,EAAA5D,EAAA6D,cAACC,EAAA,EAAD,CAASqE,KAAG,EAACC,KAAK,cAGtBxE,EAAA5D,EAAA6D,cAACC,EAAA,EAAD,KACEF,EAAA5D,EAAA6D,cAACC,EAAA,EAAD,CAAYqB,GAAG,MACbvB,EAAA5D,EAAA6D,cAACC,EAAA,EAAD,CAASqE,KAAG,EAACC,KAAK,oBA1BhC,IAgCgBlH,KAAKoE,MAAM6B,YAAcI,GAEzC3D,EAAA5D,EAAA6D,cAAA,OAAK0D,QAAQ,eAAgB/H,GAAG,WAChCoE,EAAA5D,EAAA6D,cAACC,EAAA,EAAD,KACEF,EAAA5D,EAAA6D,cAACC,EAAA,EAAD,CAAQW,UAAU,QAChBb,EAAA5D,EAAA6D,cAACC,EAAA,EAAD,CAASgG,GAAG,IAAIrF,UAAU,QAC1Bb,EAAA5D,EAAA6D,cAACC,EAAA,EAAD,CAASW,UAAU,mCACnBb,EAAA5D,EAAA6D,cAAA,OAAKY,UAAU,YACfb,EAAA5D,EAAA6D,cAACC,EAAA,EAAD,CAASsE,KAAK,OAAO3D,UAAU,kBAC/Bb,EAAA5D,EAAA6D,cAAA,OAAKY,UAAU,QACfb,EAAA5D,EAAA6D,cAAA,iCAGAD,EAAA5D,EAAA6D,cAACC,EAAA,EAAD,KACEF,EAAA5D,EAAA6D,cAAA,OAAKxB,MAAOnB,KAAKmO,QACfzL,EAAA5D,EAAA6D,cAAA,UAAK3C,KAAKoE,MAAM0D,WAAY9H,KAAKoE,MAAMT,OAAO,OAAO,GAAI3D,KAAKoE,MAAMT,QACpEjB,EAAA5D,EAAA6D,cAACC,EAAA,EAAD,CAAUwL,KAAK,aAAYrJ,MAAO/E,KAAKoE,MAAM0D,WAAYxJ,GAAG,aAAawG,KAAK,aAAaiE,KAAK,OAAOD,SAAU9I,KAAK0E,kBAAmBsE,YAAY,eACrJtG,EAAA5D,EAAA6D,cAACC,EAAA,EAAD,CAAUwL,KAAK,SAASrJ,MAAO/E,KAAKoE,MAAMT,OAAQrF,GAAG,SAASwG,KAAK,SAASiE,KAAK,OAAOD,SAAU9I,KAAK0E,kBAAmBsE,YAAY,WACtItG,EAAA5D,EAAA6D,cAACkI,EAAD,CAAU9F,MAAO/E,KAAKoE,MAAML,OAAQzF,GAAG,SAASwG,KAAK,SAASgE,SAAU9I,KAAK0E,oBAC7EhC,EAAA5D,EAAA6D,cAACC,EAAA,EAAD,CAAQ4D,MAAM,UAAUtC,QAASlE,KAAKgO,MAAtC,YAMNtL,EAAA5D,EAAA6D,cAACC,EAAA,EAAD,CAAQgG,GAAG,IAAIrF,UAAU,QACvBb,EAAA5D,EAAA6D,cAACC,EAAA,EAAD,CAASW,UAAU,wBACjBb,EAAA5D,EAAA6D,cAAA,OAAKY,UAAU,YACfb,EAAA5D,EAAA6D,cAACC,EAAA,EAAD,CAASsE,KAAK,QAAQ3D,UAAU,kBAChCb,EAAA5D,EAAA6D,cAAA,OAAKY,UAAU,QACfb,EAAA5D,EAAA6D,cAAA,sCAGAD,EAAA5D,EAAA6D,cAACC,EAAA,EAAD,KACEF,EAAA5D,EAAA6D,cAAA,OAAKxB,MAAOnB,KAAKmO,QACjBzL,EAAA5D,EAAA6D,cAAC0L,EAAD,CAAWhK,MAAOrE,KAAKoE,MAAMC,MAAOwI,KAAM7M,KAAKqE,wBAvJ5C0D,aC6BJuG,6MA9BblK,MAAQ,CACNgF,WAAS7E,aAAaC,QAAQ,aAC9B6E,KAAM,OACNC,MAAO,GACPC,MAAO,MAGXf,WAAa,WACXxD,EAAKC,SAAS,CAACmE,UAAU,6EAKzB,OACE1G,EAAA5D,EAAA6D,cAAC4L,EAAA,EAAD,KACE7L,EAAA5D,EAAA6D,cAAA,WACA3C,KAAKoE,MAAMgF,SACb1G,EAAA5D,EAAA6D,cAAC6L,EAAA,EAAD,KACE9L,EAAA5D,EAAA6D,cAAC8L,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAW5O,KAAK4O,UAAWxF,SAAUpJ,KAAKoE,MAAMgF,SAAUyF,UAAWrE,IAC1FxK,KAAKoE,MAAMgF,UAAU,CACtB1G,EAAA5D,EAAA6D,cAAC8L,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,QAAQE,UAAWlB,EAAOjG,IAAK,IACjDhF,EAAA5D,EAAA6D,cAAC8L,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,YAAYE,UAAWlB,EAAMjG,IAAK,IACpDhF,EAAA5D,EAAA6D,cAAC8L,EAAA,EAAD,CAAOI,UAAW1K,EAAeuD,IAAK,MANlBhF,EAAA5D,EAAA6D,cAACmM,EAAD,CAAStG,WAAYxI,KAAKwI,sBAlBlCT,aCElBgH,IAASC,OAAOtM,EAAA5D,EAAA6D,cAACsM,EAAD,MAASpJ,SAASwG,eAAe","file":"static/js/main.1c6f133f.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport default {\n  // Gets all books\n  getUsers: function() {\n    return axios.get(\"/api/users\");\n  },\n  // Gets the book with the given id\n  getUser: function(id) {\n    return axios.get(\"/api/users/\" + id);\n  },\n  // Deletes the book with the given id\n  deleteUser: function(id) {\n    return axios.delete(\"/api/users/\" + id);\n  },\n  deleteLyric: async function(id) {\n    console.log(\"front end API\")\n    try {\n      const response = await axios({\n        method: \"DELETE\",\n        url: \"/api/lyrics/lyrics/\" + id\n      })\n      return response\n    } catch (error) {\n      console.log(error)\n    }\n  },\n  //login USER\n  loginUser: function(data){\n    return axios.post('/api/users/login', data)\n  },\n  // Saves a book to the database\n  saveUser: function(userData) {\n    return axios.post(\"/api/users\", userData);\n  },\n  // Saves a Lyric to the database\n  saveLyric: function(userData) {\n    return axios.post(\"/api/lyrics\", userData);\n  },\n  getLyric: function(userEmail) {\n    return axios.get(\"/api/lyrics/\" + userEmail);\n  },\n  // Saves a Lyric to the database\n  updateLyric: function(id, userData) {\n    return axios.put(`/api/lyrics/lyrics/${id}`, userData);\n  },\n  getLyricById: function(id) {\n    return axios.get(\"/api/lyrics/lyrics/\" + id);\n  },\n  getMusicByMood: function(id) {\n    return axios.get(\"/api/music/\" + id);\n  },\n  getMusicByStyle: function(id) {\n    return axios.get(\"/api/music/\" + id);\n  },\n  getMusicByTempo: function(id) {\n    return axios.get(\"/api/music/\" + id);\n  },\n  getMusic: function() {\n    return axios.get(\"/api/music/\");\n  },\n  getMoreMusic: function(style, mood) {\n    return axios.get(\"api/music/\" + style + mood);\n  },\n\n};\n","import React from \"react\";\nimport { MDBCard, MDBCardBody, MDBCardTitle, MDBCardText, MDBContainer, MDBBtn, MDBCol } from \"mdbreact\";\nimport { Link, withRouter} from \"react-router-dom\";\nimport \"./style.css\";\nimport Moment from 'moment';\nimport {useSpring, animated} from 'react-spring'\n\n\nconst calc = (x, y) => [-(y - window.innerHeight / 2) / 20, (x - window.innerWidth / 2) / 20, 1.1]\nconst trans = (x, y, s) => `perspective(600px) rotateX(${x}deg) rotateY(${y}deg) scale(${s})`\n\n\nfunction Projects(props) {\n  const [prop, set] = useSpring(() => ({ xys: [0, 0, 1], config: { mass: 5, tension: 350, friction: 40 } }))\n\n  return (\n    <MDBContainer>\n    <animated.div class=\"cards\"\n    onMouseMove={({ clientX: x, clientY: y }) => set({ xys: calc(x, y) })}\n    onMouseLeave={() => set({ xys: [0, 0, 1] })}\n    style={{ transform: prop.xys.interpolate(trans) }}>\n  <MDBCard className=\"theCard\">\n    <MDBCardBody>\n      <MDBCardTitle \n            className=\"text-center blue-text font-weight-bold text-uppercase\" >{props.title}</MDBCardTitle>\n            <hr />\n      <MDBCardTitle tag=\"h6\" sub className=\"mb-2 text-muted\">\n        By: {props.author}\n      </MDBCardTitle>\n      <MDBCardText className=\"cardText\">\n  {Moment(props.date).format(\"MM-DD-YYYY\")}{\" \"}<br />\n        {props.lyrics}\n      </MDBCardText>\n      <MDBContainer>  \n        <MDBCol className=\"text-center\">\n          <Link to={\"/main/\" + props.id}>\n          <MDBBtn className=\"blue-gradient\" >Edit</MDBBtn>\n          </Link>\n          <MDBBtn onClick={props.onClick} className=\"blue-gradient\">Delete</MDBBtn>\n        </MDBCol>\n      </MDBContainer>\n    </MDBCardBody>\n  </MDBCard>\n</animated.div>\n</MDBContainer>\n  );\n}\n\nexport default withRouter(Projects);","import React, { Component } from \"react\";\nimport { Link, withRouter} from \"react-router-dom\";\nimport Projects from \"../components/Projects\";\nimport music from \"../music.json\";\nimport { MDBContainer, MDBRow, MDBNavbar, MDBNavbarBrand, MDBNavbarToggler, MDBCollapse, MDBNavbarNav, MDBNavItem, MDBNavLink, MDBIcon, MDBCol, MDBBtn } from \"mdbreact\";\nimport API from '../utils/API'\n\n\n\n\nclass UserProjects extends Component {\n  state = {\n    music,\n    projects:[],\n    userEmail: localStorage.getItem(\"userEmail\"),\n    refresh: false,\n  };\n\n  handleInputChange = event => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n    alert(\"Submitted\");\n  };\n\n  // Gets ALL the lyrics for the email thats logged in\n  loadLyrics() {\n    API.getLyric(this.state.userEmail)\n      .then(res => {\n        this.setState({projects:res.data})\n      })\n      .catch(err => console.log(err));\n  } \n\n  componentDidMount() {\n    this.loadLyrics();\n  }  \n\n  deleteLyric = (id)=> {\n    API.deleteLyric(id)\n      .then(res =>{ console.log(res);\n        this.loadLyrics();})\n      .catch(err => console.log(err));\n    \n  }\n\n  logOut = () => {\n    localStorage.removeItem(\"userEmail\")\n    localStorage.removeItem(\"userPassword\");\n    document.location.href=\"/\";\n    };\n\n  toggleCollapse = collapseID => () =>\n    this.setState(prevState => ({\n    collapseID: prevState.collapseID !== collapseID ? collapseID : \"\"\n}));\n  \n\n    render(props) {\n      const overlay = (\n        <div id=\"sidenav-overlay\" style={{ backgroundColor: \"transparent\" }} onClick={this.toggleCollapse(\"navbarCollapse\")} />\n        );\n      return (\n        <>\n        \n    <div>\n    <MDBNavbar color=\"bg-secondary\" fixed=\"top\" dark expand=\"md\" scrolling transparent>\n        <MDBContainer>\n          <MDBNavbarBrand>\n            <span className=\"white-text\">Pose</span>\n          </MDBNavbarBrand>\n          <MDBNavbarToggler onClick={this.toggleCollapse(\"navbarCollapse\")} />\n          <MDBCollapse id=\"navbarCollapse\" isOpen={this.state.collapseID} navbar>\n            <MDBNavbarNav right>\n              <MDBNavItem>\n                <MDBNavLink to=\"!#\">\n                  <MDBIcon fab icon=\"facebook-f\" />\n                </MDBNavLink>\n              </MDBNavItem>\n              <MDBNavItem>\n                <MDBNavLink to=\"!#\">\n                  <MDBIcon fab icon=\"twitter\" />\n                </MDBNavLink>\n              </MDBNavItem>\n              <MDBNavItem>\n                <MDBNavLink to=\"!#\">\n                  <MDBIcon fab icon=\"instagram\" />\n                </MDBNavLink>\n              </MDBNavItem>\n            </MDBNavbarNav>\n          </MDBCollapse>\n        </MDBContainer>\n      </MDBNavbar>\n      {this.state.collapseID && overlay}\n    </div>\n        \n        <MDBContainer id=\"mainPad\">\n        <MDBRow>\n          <MDBCol size=\"sm-12\">\n            <MDBRow center>\n              <Link to=\"/main\">\n              <MDBBtn outline rounded color=\"secondary\">\n                New Project\n              </MDBBtn>\n              </Link>\n              <MDBBtn outline rounded color=\"secondary\" onClick={this.logOut}>\n                Log Out\n              </MDBBtn>\n            </MDBRow>\n          </MDBCol>\n        </MDBRow>\n          <MDBRow>\n            {/* maps out the projects on project page */}\n            {this.state.projects.map((project, i) =>{\n            return (\n            <MDBCol  key={i} size=\"md-4\"> \n                <Projects \n                  date={project.date}\n                  lyrics={project.lyrics}\n                  onClick={this.deleteLyric.bind(this, project._id)}\n                  author={project.author} \n                  title={project.lyricTitle}\n                  id={project._id} />\n            </MDBCol>)\n          })}\n          </MDBRow>\n        </MDBContainer>\n        </>\n      );\n    }\n  }\n\nexport default withRouter(UserProjects);\n","import React, { Component } from 'react';\nimport { MDBContainer, MDBBtn, MDBModal, MDBModalBody, MDBModalHeader, MDBModalFooter, MDBIcon, MDBInput, MDBCol } from 'mdbreact';\nimport API from '../../utils/API'\n\nclass ModalPage extends Component {\nstate = {\n  modal14: false,\n  userEmail: localStorage.getItem(\"userEmail\"),\n  userPassword: \"\",\n}\n\ntoggle = nr => () => {\n  let modalNumber = 'modal' + nr\n  this.setState({\n    [modalNumber]: !this.state[modalNumber]\n  });\n}\n\nhandleInputChange = event => {\n  const { name, value } = event.target;\n  this.setState({\n    [name]: value\n  });\n};\n\nlogIn = (event) => {\n\n  event.preventDefault();\n   API.loginUser({\n      userEmail: this.state.userEmail\n    }).then(res => {\n      if(res.data){\n        // this.setState({\n        //   loggedIn: true,\n        //   link1: \"main\",\n        //   userId: res.data._id,\n        // })\n        localStorage.setItem(\"userEmail\", this.state.userEmail);\n        localStorage.setItem(\"userPassword\", this.state.userPassword);\n        this.props.onLoggedIn();\n        \n      } else {\n        alert(\"wrong user name or pasword\");\n      }\n    })\n};\n\n\nrender() {\n  return (\n      <MDBContainer>\n                \n        {/* <MDBBtn outline rounded color=\"secondary\" onClick={this.toggle(14)}><MDBIcon icon=\"user-plus\" /> Register</MDBBtn> */}\n\n        <MDBModal isOpen={this.props.open} toggle={this.toggle(14)} size=\"md\"\n          cascading>\n          <MDBModalHeader toggle={this.toggle(14)} titleClass=\"d-inline title\"\n            className=\"text-center light-blue darken-3 white-text\"><MDBIcon icon=\"pencil-alt\" /> Sign In</MDBModalHeader>\n          <MDBModalBody>\n          <MDBContainer>\n      {/* <MDBRow> */}\n        <MDBCol md=\"12\">\n          <form>\n            {/* <p className=\"h5 text-center mb-4\">Sign in</p> */}\n            <div className=\"grey-text\">\n              <MDBInput\n                name=\"userEmail\"\n                label=\"Email\"\n                value={this.state.userEmail}\n                onChange={this.handleInputChange}\n                type=\"email\"\n                placeholder=\"email\"\n              />\n              <MDBInput\n                name=\"userPassword\"\n                label=\"Password\"\n                value={this.state.userPassword}\n                onChange={this.handleInputChange}\n                type=\"password\"\n                placeholder=\"password\"\n              />\n            </div>\n          </form>\n        </MDBCol>\n      {/* </MDBRow> */}\n    </MDBContainer>\n          </MDBModalBody>\n          <MDBModalFooter>\n            <MDBBtn color=\"secondary\" onClick={this.props.onClose}>Close</MDBBtn>\n            <MDBBtn color=\"primary\" onClick={this.logIn}>Log In</MDBBtn>\n          </MDBModalFooter>\n        </MDBModal>\n      </MDBContainer>\n    );\n  }\n}\n\nexport default ModalPage;","import React, { Component } from 'react';\nimport { MDBContainer, MDBBtn, MDBModal, MDBModalBody, MDBModalHeader, MDBModalFooter, MDBIcon, MDBInput, MDBCol } from 'mdbreact';\n\nclass SignUpModalPage extends Component {\nstate = {\n  modal14: false,\n  userEmail: \"\",\n  userPassword: \"\"\n}\n\ntoggle = nr => () => {\n  let modalNumber = 'modal' + nr\n  this.setState({\n    [modalNumber]: !this.state[modalNumber]\n  });\n}\n\nhandleInputChange = event => {\n  const { name, value } = event.target;\n  this.setState({\n    [name]: value\n  });\n};\n\n\nrender() {\n  return (\n    <MDBContainer>\n    {/* <MDBBtn outline rounded color=\"secondary\" onClick={this.toggle(14)}><MDBIcon icon=\"sign-in-alt\" /> LOG In</MDBBtn>         */}\n    {/* <MDBBtn outline rounded color=\"secondary\" onClick={this.toggle(14)}><MDBIcon icon=\"user-plus\" /> Register</MDBBtn> */}\n\n    <MDBModal isOpen={this.props.isOpen} toggle={this.toggle(14)} size=\"md\"\n      cascading>\n      <MDBModalHeader toggle={this.toggle(14)} titleClass=\"d-inline title\"\n        className=\"text-center light-blue darken-3 white-text\"><MDBIcon icon=\"pencil-alt\" />  Register</MDBModalHeader>\n      <MDBModalBody>\n      <MDBContainer>\n        <MDBCol md=\"12\">\n          <form>\n            <div className=\"grey-text\">\n              <MDBInput\n                name=\"userEmail\"\n                label=\"Email\"\n                value={this.state.userEmail}\n                onChange={this.handleInputChange}\n                type=\"email\"\n                placeholder=\"email\"\n              />\n              <MDBInput\n                name=\"userPassword\"\n                label=\"Password\"\n                value={this.state.userPassword}\n                onChange={this.handleInputChange}\n                type=\"password\"\n                placeholder=\"password\"\n              />\n            </div>\n          </form>\n        </MDBCol>\n    </MDBContainer>\n    </MDBModalBody>\n          <MDBModalFooter>\n            <MDBBtn color=\"secondary\" onClick={this.toggle(14)}>Close</MDBBtn>\n            <MDBBtn color=\"primary\" type=\"submit\" onClick={(event) => this.props.saveUser(this.state.userEmail, this.state.userPassword, event )} >Save changes</MDBBtn>\n          </MDBModalFooter>\n        </MDBModal>\n      </MDBContainer>\n    );\n  }\n}\n\nexport default SignUpModalPage;","import React from \"react\";\nimport { MDBNavbar, MDBNavbarBrand, MDBNavbarNav, MDBNavItem, MDBNavLink, MDBNavbarToggler, MDBCollapse, MDBMask,\n  MDBRow, MDBCol, MDBIcon, MDBBtn, MDBView, MDBContainer } from \"mdbreact\";\nimport \"./style.css\";\nimport ModalPage from '../Modal'\nimport API from \"../../utils/API\"\nimport SignUpModalPage from '../SignUpModalPage'\n\n\nclass MainPageBackground extends React.Component {\nstate = {\ncollapseID: \"\",\nloggedIn: localStorage.getItem(\"userEmail\") === null ? false:true,\nuserEmail: localStorage.getItem(\"userEmail\")||\"\",\nuserPassword: \"\",\nlogo: \"pose\",\nlink1: \"\",\nlink2: \"\",\nuserId: \"\",\nprojects:[],\nlogin: false\n};\n\nhandleInputChange = event => {\n  const { name, value } = event.target;\n  this.setState({\n    [name]: value\n  });\n};\n\ntoggleCollapse = collapseID => () =>\nthis.setState(prevState => ({\ncollapseID: prevState.collapseID !== collapseID ? collapseID : \"\"\n}));\n\nlogIn = (event) => {\ndebugger;\n  event.preventDefault();\n   API.loginUser({\n      userEmail: this.state.userEmail\n    }).then(res => {\n      if(res.data){\n        localStorage.setItem(\"userEmail\", this.state.userEmail);\n        localStorage.setItem(\"userPassword\", this.state.userPassword);\n        this.props.onLoggedIn();\n      } else {\n        alert(\"wrong user name or pasword\");\n      }\n    })\n};\n\nsaveUser = (email, password, event) => {\n  event.preventDefault();\n  API.saveUser({\n    userEmail: email,\n    userPassword: password,\n  })\n    .then(res => {\n       this.setState({openModal: false})      \n    })\n    .catch(err => console.log(err));\n};\n\nrender() {\nconst overlay = (\n<div id=\"sidenav-overlay\" style={{ backgroundColor: \"transparent\" }} onClick={this.toggleCollapse(\"navbarCollapse\")} />\n);\nreturn (\n<div>\n\n\n    \n    \n    <MDBNavbar color=\"bg-secondary\" fixed=\"top\" dark expand=\"md\" scrolling transparent>\n        <MDBContainer>\n          <MDBNavbarBrand>\n            <span className=\"white-text\">Pose</span>\n          </MDBNavbarBrand>\n          <MDBNavbarToggler onClick={this.toggleCollapse(\"navbarCollapse\")} />\n          <MDBCollapse id=\"navbarCollapse\" isOpen={this.state.collapseID} navbar>\n            <MDBNavbarNav left>\n              {/* <MDBNavItem>\n                <MDBNavLink to=\"#!\">Home</MDBNavLink>\n              </MDBNavItem>              \n              <MDBNavItem>\n                <MDBNavLink to=\"#!\">Contact</MDBNavLink>\n              </MDBNavItem> */}\n            </MDBNavbarNav>\n            <MDBNavbarNav right>\n              <MDBNavItem>\n                <MDBNavLink to=\"!#\">\n                  <MDBIcon fab icon=\"facebook-f\" />\n                </MDBNavLink>\n              </MDBNavItem>\n              <MDBNavItem>\n                <MDBNavLink to=\"!#\">\n                  <MDBIcon fab icon=\"twitter\" />\n                </MDBNavLink>\n              </MDBNavItem>\n              <MDBNavItem>\n                <MDBNavLink to=\"!#\">\n                  <MDBIcon fab icon=\"instagram\" />\n                </MDBNavLink>\n              </MDBNavItem>\n            </MDBNavbarNav>\n          </MDBCollapse>\n        </MDBContainer>\n      </MDBNavbar>\n      {this.state.collapseID && overlay}\n     \n  \n  <div id=\"videobackground\">\n  <MDBView>\n    <video className=\"video-intro\" poster=\"https://mdbootstrap.com/img/Photos/Others/background.jpg\" playsInline\n      autoPlay muted=\"\" loop>\n      <source src=\"https://www.videvo.net/videvo_files/converted/2016_01/preview/koncert.mp426536.webm\" type=\"video/mp4\" />\n    </video>\n    <MDBMask className=\"d-flex justify-content-center align-items-center gradient\">\n      <MDBContainer className=\"px-md-3 px-sm-0\">\n        <MDBRow>\n          <MDBCol md=\"12\" className=\"mb-4 white-text text-center\">\n            <h1 className=\"display-3 font-weight-bold mb-0 pt-md-5\">\n              Your Virtual Composer{\" \"}\n            </h1>\n            <hr className=\"hr-light my-4 w-75\" />\n            <h4 className=\"subtext-header mt-2 mb-4\">\n              Create your dreams.\n            </h4>\n            {/* <MDBContainer> */}\n            {/* <MDBInput \n              name=\"userEmail\"\n              label=\"Email\"\n              value={this.state.userEmail}\n              onChange={this.handleInputChange}\n              type=\"email\"\n              placeholder=\"email\"/>\n            <MDBInput \n              name=\"userPassword\"\n              label=\"Password\"\n              value={this.state.userPassword}\n              onChange={this.handleInputChange}\n              type=\"password\"\n              placeholder=\"password\"/>\n            </MDBContainer> */}\n            {/* <MDBBtn outline rounded color=\"secondary\" onClick={this.logIn}>\n            <MDBIcon icon=\"sign-in-alt\" /> Log in\n            </MDBBtn> */}\n            <MDBRow>\n            <MDBCol sm=\"12\" md=\"6\" className=\"text-right\">\n              <MDBBtn outline rounded color=\"secondary\" onClick={()=>this.setState({login:true})}><MDBIcon icon=\"sign-in-alt\" /> LOG In</MDBBtn>\n              <ModalPage  onClose={()=>this.setState({login:false})} open={this.state.login} onLoggedIn={this.props.onLoggedIn} />\n              </MDBCol>   \n              <MDBCol sm=\"12\" md=\"6\" className=\"text-left\">\n              <SignUpModalPage isOpen={this.state.openModal} saveUser={this.saveUser}/> \n              <MDBBtn outline rounded color=\"secondary\" onClick={()=>this.setState({openModal: true})}><MDBIcon icon=\"user-plus\" /> Register</MDBBtn>\n              </MDBCol>  \n              </MDBRow>      \n          </MDBCol>\n        </MDBRow>\n              {/* <MDBBtn outline rounded color=\"secondary\" type=\"submit\" onClick={this.saveUser}>\n                <MDBIcon icon=\"user-plus\" /> Register\n              </MDBBtn> */}\n      </MDBContainer>\n    </MDBMask>\n  </MDBView>\n  \n\n  {/* <MDBContainer>        \n    <MDBRow className=\"pt-5 pb-4\">\n      <MDBCol md=\"12\" className=\"text-center\">\n        <p>\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n          eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut\n          enim ad minim veniam, quis nostrud exercitation ullamco laboris\n          nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor\n          in reprehenderit in voluptate velit esse cillum dolore eu fugiat\n          nulla pariatur. Excepteur sint occaecat cupidatat non proident,\n          sunt in culpa qui officia deserunt mollit anim id est laborum.\n        </p>\n        <p>\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n          eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut\n          enim ad minim veniam, quis nostrud exercitation ullamco laboris\n          nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor\n          in reprehenderit in voluptate velit esse cillum dolore eu fugiat\n          nulla pariatur. Excepteur sint occaecat cupidatat non proident,\n          sunt in culpa qui officia deserunt mollit anim id est laborum.\n        </p>\n        <p>\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n          eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut\n          enim ad minim veniam, quis nostrud exercitation ullamco laboris\n          nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor\n          in reprehenderit in voluptate velit esse cillum dolore eu fugiat\n          nulla pariatur. Excepteur sint occaecat cupidatat non proident,\n          sunt in culpa qui officia deserunt mollit anim id est laborum.\n        </p>    \n      </MDBCol>\n    </MDBRow>\n  </MDBContainer> */}\n  </div>\n</div>\n);\n}\n}\n\nexport default MainPageBackground;","import React, { Component } from \"react\";\nimport API from \"../utils/API\";\nimport UserProjects from \"./UserProjects\";\nimport { withRouter} from \"react-router-dom\";\nimport MainPageBackground from '../components/MainPageBackground'\n\nclass Welcome extends Component {\n  state = {\n    //loggedIn: false,\n    loggedIn: localStorage.getItem(\"userEmail\") === null ? false:true,\n    userEmail: localStorage.getItem(\"userEmail\"),\n    userPassword: \"\",\n    logo: \"pose\",\n    link1: \"\",\n    link2: \"\",\n    userId: \"\",\n    projects:[],\n  };\n\n  // Gets all the lyrics for the email thats logged in\n  loadLyrics() {\n    API.getLyric(this.state.userEmail)\n      .then(res => {\n        this.setState({projects:res.data})\n      })\n      .catch(err => console.log(err));\n  }\n  \n  \n  componentDidMount() {\n    this.loadLyrics();\n  }\n  \n\n  handleInputChange = event => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  logIn = (event) => {\n\n    event.preventDefault();\n     API.loginUser({\n        userEmail: this.state.userEmail\n      }).then(res => {\n        if(res.data){\n          // this.setState({\n          //   loggedIn: true,\n          //   link1: \"main\",\n          //   userId: res.data._id,\n          // })\n          localStorage.setItem(\"userEmail\", this.state.userEmail);\n          localStorage.setItem(\"userPassword\", this.state.userPassword);\n          this.props.onLoggedIn();\n          this.loadLyrics();\n        } else {\n          alert(\"wrong user name or pasword\");\n        }\n      })\n  };\n\n\n  saveUser = (event) => {\n    event.preventDefault();\n    API.saveUser({\n      userEmail: this.state.userEmail,\n      userPassword: this.state.userPassword,\n    })\n      .then(res => {\n        this.setState({\n        userEmail: \"\",\n        userPassword: \"\"})\n        this.findUser(res)\n      })\n      .catch(err => console.log(err));\n  };\n\n  logOut = () => {\n    localStorage.removeItem(\"userEmail\")\n    localStorage.removeItem(\"userPassword\")\n    this.setState({\n      loggedIn: false,\n      mainLink: \"\"\n    });\n    this.props.logOut();\n  };\n\n  render() {\n    return (\n      <div>\n        {this.state.loggedIn ? (\n          <div>\n          <UserProjects projects={this.state.projects} logOut={this.logOut}/>\n          </div>\n          ) : (\n          <div>\n          <MainPageBackground onLoggedIn={this.props.onLoggedIn} />\n          </div>           \n        )}       \n      </div>\n    );\n  }\n}\n\nexport default withRouter(Welcome);\n","import React from \"react\";\n\n// This file exports the Input, TextArea, and FormBtn components\n\nexport function Input(props) {\n  return (\n    <div className=\"form-group\">\n      <input className=\"form-control\" {...props} />\n    </div>\n  );\n}\n\nexport function TextArea(props) {\n  return (\n    <div className=\"form-group\">\n      <textarea className=\"form-control\" rows=\"20\" {...props} />\n    </div>\n  );\n}\n\nexport function FormBtn(props) {\n  return (\n    <button {...props} style={{ float: \"right\", marginBottom: 10 }} className=\"btn btn-success\">\n      {props.children}\n    </button>\n  );\n}\n","import React from \"react\";\nimport { MDBBtn, MDBIcon, MDBTable, MDBTableBody } from \"mdbreact\";\n\nfunction AudioBtn(props) {\n  return (\n    <MDBTable hover responsive>\n      <MDBTableBody>\n        <tr>\n          <td><MDBBtn tag=\"a\" size=\"lg\" gradient=\"purple\" onClick={props.onClick}><MDBIcon icon=\"play\" /></MDBBtn></td>\n          <td>{props.songTitle}</td>\n        </tr>\n      </MDBTableBody>\n    </MDBTable>    \n  );\n}\n\nexport default AudioBtn;\n\n","import React from \"react\";\nimport { MDBDropdown, MDBDropdownToggle, MDBDropdownMenu, MDBDropdownItem } from \"mdbreact\";\n\nconst DropdownPage = (props) => {\n  return (\n    <MDBDropdown  onChange={props.onChange} >\n      <MDBDropdownToggle caret color=\"primary\">\n        {props.title}\n      </MDBDropdownToggle>\n      <MDBDropdownMenu basic>\n        {props.items.map((item, key) => <MDBDropdownItem key={key} onClick={() => props.onChange(item)}>{item}</MDBDropdownItem>)}\n      </MDBDropdownMenu>\n    </MDBDropdown>\n  );\n}\n\nexport default DropdownPage;","import React from \"react\";\n\nconst SliderPage = (props) => {\n    return (\n      <div className=\"my-5\">\n        <label htmlFor=\"customRange1\">Tempo range</label>\n        {/* <input type=\"range\" className=\"custom-range\" id=\"customRange1\" /> */}\n        <input id={props.id} type=\"range\" className=\"custom-range\" defaultValue=\"1\" min=\"0.5\" max=\"1.5\" step=\"0.1\" />\n      </div>\n    );\n  }\n\nexport default SliderPage;","import React, { Component, } from \"react\";\nimport AudioBtn from \"../AudioBtn\";\nimport Dropdown from \"../Dropdown\";\n// import music from \"../../music.json\";\nimport API from \"../../utils/API\";\nimport SliderPage from \"../Slider\"\nimport { MDBRow, MDBContainer, MDBCol } from \"mdbreact\";\n\n\nclass MusicArea extends Component {\n  state = {\n    // music,\n    dbMusic: [],\n    filterMusic: [],\n    style: \"\",\n    mood: \"\",\n    songLoc:\"/\"+this.props.music,\n    sound:document.getElementById(\"myAudio\"),\n  };\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({songLoc:\"/\"+nextProps.music})\n  }\n  \n\n  componentDidMount() {\n    // sets the pitch\n  var a = document.getElementById(\"myAudio\");\n  var p = document.getElementById(\"pbr\");\n  var c = document.getElementById(\"currentPbr\");\n\n  p.addEventListener('input',function(){\n    c.innerHTML = p.value;\n    a.playbackRate = p.value;\n    a.defaultPlaybackRate  = 1;\n    p.defaultValue = 1;\n  },false);\n  // get all music from db\n    API.getMusic()\n    .then(res => {\n        this.setState({ dbMusic: res.data, filterMusic: res.data });\n      })\n      .catch(err => console.log(err));\n  }\n\n styleDropdown = (e) => {\n   this.setState({ style: e })\n   if (e === \"All\") {\n     this.setState({filterMusic:this.state.dbMusic})\n   } else {\n   let array = this.state.dbMusic;\n   let filter = array.filter(function (element) {\n     return (element.style === e)\n   }) \n   this.setState({ filterMusic: filter});\n   }\n}\n\n moodDropdown = (e) => {\n  this.setState({ mood: e })\n   if (e === \"All\") {\n     this.setState({filterMusic:this.state.dbMusic})\n   } else {\n   let array = this.state.dbMusic;\n   let filter = array.filter(function (element) {\n     return (element.mood === e)\n   }) \n   this.setState({ filterMusic: filter});\n   }\n  }\n\n  playSong = song => {\n    this.props.func(song.location);\n    this.setState({ songLoc: \"/\"+song.location });\n  };\n\n  render() {\n    \n   \n\n    return (\n      <MDBContainer fluid>\n        <MDBRow>\n          <MDBCol size=\"sm-12\">\n              <MDBContainer>\n                <MDBRow className=\"mx-auto mt-1\">\n                  <audio id=\"myAudio\" src={this.state.songLoc} controls autoPlay loop>\n                    <source type=\"audio/mp3\" />\n                    Your browser does not support the audio element.\n                  </audio>\n                </MDBRow>\n                <MDBRow className=\"mx-0 mt-1\">\n                  <Dropdown\n                    onChange={e => this.styleDropdown(e)}\n                    title={this.state.style || \"Style\"}\n                    items={[\"All\",\"Rock\", \"Pop\", \"Acoustic\", \"Metal\", \"Electronic\"]}\n                  />\n                  <Dropdown\n                    onChange={e => this.moodDropdown(e)}\n                    title={this.state.mood || \"Mood\"}\n                    items={[\"All\",\"Happy\", \"Sad\", \"Angry\", \"Indifferent\"]}\n                  />\n                </MDBRow>\n                <form>\n                  <SliderPage id=\"pbr\" className=\"mx-auto mt-1\"/>\n                  <p>Playback Rate <span id=\"currentPbr\">1</span></p>\n                </form>\n              </MDBContainer>\n              <MDBContainer>\n                {this.state.filterMusic\n                  // randomizes music\n                  // .sort((a, b) => {return 0.5 - Math.random();})\n                  // displays all music\n                  .map((music, index) => (\n                    <AudioBtn\n                      name={music.title}\n                      key={index}\n                      onClick={this.playSong.bind(this, music)}\n                      src={music.location}\n                      songTitle={music.title}\n                      id={music.id}\n                    />\n                  ))}\n                </MDBContainer>\n          </MDBCol>\n        </MDBRow>\n      </MDBContainer>\n    );\n  }\n}\n\nexport default MusicArea;\n","import React, { Component } from \"react\";\nimport API from \"../utils/API\";\nimport { TextArea } from \"../components/Form\";\nimport MusicArea from \"../components/MusicArea\";\n\nimport { MDBBtn, MDBCard, MDBCardBody, MDBNavbar, MDBNavbarBrand, MDBNavbarNav, MDBNavItem, MDBNavLink, MDBNavbarToggler, MDBCollapse, MDBRow, MDBCol, MDBIcon, MDBContainer, MDBInput } from \"mdbreact\";\n\n\n\nclass Main extends Component {\n  state = {\n    userEmail: localStorage.getItem(\"userEmail\"),\n    logo:\"pose\",\n    link1:\"\",\n    link2:\"home\",\n    lyrics: \"\",\n    lyricTitle: \"\",\n    music: \"\",\n    author: \"\",\n    textArea:\"some test text\", \n    editing:false,\n    lyricData: {lyrics:\"\",\n                lyricsTitle:\"\",\n                author:\"\"}, \n  };\n\n  componentDidMount() {\n    if (this.props.match.params.id) {\n    API.getLyricById(this.props.match.params.id)\n      .then( (res) => {\n        this.setState({ lyrics: res.data.lyrics,\n                        author: res.data.author,\n                        lyricTitle: res.data.lyricTitle });\n        this.setState({ lyricData: res.data,\n        editing:true, music: res.data.music });\n      })\n      .catch(err => console.log(err));\n    }\n  }\n  \n\n  handleInputChange = event => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n    });\n  };\n  \n  music = url => {\n    this.setState({music : url});\n}\n\n  save = () => {\n    if (this.state.editing) {\n    API.updateLyric(this.props.match.params.id, {\n      userEmail: this.state.userEmail,\n      author: this.state.author,\n      lyricTitle: this.state.lyricTitle,\n      lyrics: this.state.lyrics,\n      music: this.state.music,\n    })\n      .then(res => {\n        alert(`Saved ${this.state.lyricTitle}!`);\n      })\n      .catch(err => console.log(err));\n    } else {\n      API.saveLyric({\n      userEmail: this.state.userEmail,\n      author: this.state.author,\n      lyricTitle: this.state.lyricTitle,\n      lyrics: this.state.lyrics,\n      music: this.state.music,\n    })\n      .then(res => {\n        alert(`Saved ${this.state.lyricTitle}!`);\n      })\n      .catch(err => console.log(err));}\n  }; \n\n  toggleCollapse = collapseID => () =>\n      this.setState(prevState => ({\n      collapseID: prevState.collapseID !== collapseID ? collapseID : \"\"\n  }\n    )\n      );\n\n  render() {\n    const overlay = (\n      <div id=\"sidenav-overlay\" style={{ backgroundColor: \"transparent\" }} onClick={this.toggleCollapse(\"navbarCollapse\")} />\n      );\n    return (\n      <>\n      <div id=\"videobackground\">        \n        <div>\n          <MDBNavbar color=\"bg-secondary\" fixed=\"top\" dark expand=\"md\" scrolling transparent className=\"mb-4\">\n            <MDBContainer>\n              <MDBNavbarBrand>\n                <span className=\"white-text\">Pose</span>\n              </MDBNavbarBrand>\n              <MDBNavbarToggler onClick={this.toggleCollapse          (\"navbarCollapse\")} />  \n              <MDBCollapse id=\"navbarCollapse\" isOpen=                  {this.state.collapseID} navbar>\n                <MDBNavbarNav left>\n                <MDBNavItem>\n                  <MDBNavLink to=\"/home\">Projects</MDBNavLink>\n                  </MDBNavItem>  \n                </MDBNavbarNav>\n                <MDBNavbarNav right>\n                  <MDBNavItem>\n                    <MDBNavLink to=\"!#\">\n                      <MDBIcon fab icon=\"facebook-f\" />\n                    </MDBNavLink>\n                  </MDBNavItem>\n                  <MDBNavItem>\n                    <MDBNavLink to=\"!#\">\n                      <MDBIcon fab icon=\"twitter\" />\n                    </MDBNavLink>\n                  </MDBNavItem>\n                  <MDBNavItem>\n                    <MDBNavLink to=\"!#\">\n                      <MDBIcon fab icon=\"instagram\" />\n                    </MDBNavLink>\n                  </MDBNavItem>\n                </MDBNavbarNav>\n              </MDBCollapse>\n            </MDBContainer>\n          </MDBNavbar> {this.state.collapseID && overlay}\n        </div>\n        <div overlay=\"purple-light\"  id=\"mainPad\">\n        <MDBContainer>  \n          <MDBRow className=\"mb-4\">\n            <MDBCol  md=\"8\" className=\"mb-r\">\n            <MDBCard className=\"cascading-admin-card .z-depth-4\">\n            <div className=\"admin-up\">\n            <MDBIcon icon=\"edit\" className=\"primary-color\"/>\n            <div className=\"data\">\n            <p >CREATE YOUR LYRICS</p>                      \n            </div>\n            </div>\n            <MDBCardBody>\n              <div style={this.border}>\n                <h2>{this.state.lyricTitle}{this.state.author?\" by \":\"\"}{this.state.author}</h2>\n                <MDBInput hint=\"Your Title\"value={this.state.lyricTitle} id=\"lyricTitle\" name=\"lyricTitle\" type=\"text\" onChange={this.handleInputChange} placeholder=\"Your Title\" />\n                <MDBInput hint=\"Author\" value={this.state.author} id=\"author\" name=\"author\" type=\"text\" onChange={this.handleInputChange} placeholder=\"Author\" />\n                <TextArea value={this.state.lyrics} id=\"lyrics\" name=\"lyrics\" onChange={this.handleInputChange}></TextArea>\n                <MDBBtn color=\"primary\" onClick={this.save}>Save</MDBBtn>\n                \n              </div>\n            </MDBCardBody>\n            </MDBCard>\n          </MDBCol>\n          <MDBCol md=\"4\" className=\"mb-r\">\n            <MDBCard className=\"cascading-admin-card\">\n              <div className=\"admin-up\">\n              <MDBIcon icon=\"music\" className=\"primary-color\"/>\n              <div className=\"data\">\n              <p>CHOOSE YOUR INSPIRATION</p>\n              </div>\n              </div>\n              <MDBCardBody>\n                <div style={this.border}>\n                <MusicArea music={this.state.music} func={this.music}/>\n                </div>\n              </MDBCardBody>\n            </MDBCard>\n            </MDBCol>\n          </MDBRow>            \n        </MDBContainer>  \n        </div>\n      </div>\n      </>\n    );\n  }\n}\n\nexport default Main;\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Welcome from \"./pages/Welcome\";\nimport Main from \"./pages/Main\";\nimport UserProjects from \"./pages/UserProjects\";\n\nclass App extends Component {\n\n  state = {\n    loggedIn:localStorage.getItem(\"userEmail\")?true:false,\n    logo: \"pose\",\n    link1: \"\",\n    link2: \"\",\n  }\n  \nonLoggedIn = () => {\n  this.setState({loggedIn: true})\n}\n//  renders\n\n  render() {\n  return (\n    <Router>\n      <div>\n    {!this.state.loggedIn?<Welcome onLoggedIn={this.onLoggedIn} />:\n    <Switch>\n      <Route exact path=\"/\" logToggle={this.logToggle} loggedIn={this.state.loggedIn} component={Welcome} />\n      {this.state.loggedIn&&[\n      <Route exact path=\"/main\" component={Main}  key={0}/>,\n      <Route exact path=\"/main/:id\" component={Main} key={2} />,\n      <Route component={UserProjects}  key={1} />]}\n    </Switch>}\n</div>\n</Router>\n    \n  );\n}\n}\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\nimport \"mdbreact/dist/css/mdb.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}